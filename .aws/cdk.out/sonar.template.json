{
 "Resources": {
  "sonarapifunctionServiceRole9D5C9465": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "sonar/sonar-api-function/ServiceRole/Resource"
   }
  },
  "sonarapifunction41404712": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "ImageUri": {
      "Fn::Sub": "388646735826.dkr.ecr.us-east-1.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-388646735826-us-east-1:e4790909e38051cf82aebf102cc3a9cef16d110aa7eeac73bc546e5f8d923393"
     }
    },
    "FunctionName": "sonar-api-function",
    "ImageConfig": {
     "Command": [
      "src.main.lambda_handler"
     ]
    },
    "MemorySize": 256,
    "PackageType": "Image",
    "Role": {
     "Fn::GetAtt": [
      "sonarapifunctionServiceRole9D5C9465",
      "Arn"
     ]
    },
    "Timeout": 30
   },
   "DependsOn": [
    "sonarapifunctionServiceRole9D5C9465"
   ],
   "Metadata": {
    "aws:cdk:path": "sonar/sonar-api-function/Resource",
    "aws:asset:path": "asset.e4790909e38051cf82aebf102cc3a9cef16d110aa7eeac73bc546e5f8d923393",
    "aws:asset:dockerfile-path": "Dockerfile",
    "aws:asset:property": "Code.ImageUri"
   }
  },
  "sonarapiED3C6F87": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Name": "sonar-api"
   },
   "Metadata": {
    "aws:cdk:path": "sonar/sonar-api/Resource"
   }
  },
  "sonarapiCloudWatchRole8589D102": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "apigateway.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
       ]
      ]
     }
    ]
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "sonar/sonar-api/CloudWatchRole/Resource"
   }
  },
  "sonarapiAccountA2F73F1F": {
   "Type": "AWS::ApiGateway::Account",
   "Properties": {
    "CloudWatchRoleArn": {
     "Fn::GetAtt": [
      "sonarapiCloudWatchRole8589D102",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "sonarapiED3C6F87"
   ],
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "sonar/sonar-api/Account"
   }
  },
  "sonarapiDeploymentD18A0C35cf6c356e8ea198e5381031024d698390": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "Description": "Automatically created by the RestApi construct",
    "RestApiId": {
     "Ref": "sonarapiED3C6F87"
    }
   },
   "DependsOn": [
    "sonarapiproxyANY8EFD2154",
    "sonarapiproxyOPTIONS4382E2CD",
    "sonarapiproxy9C794ECC",
    "sonarapiANY9AEEB971",
    "sonarapiOPTIONS4516706C"
   ],
   "Metadata": {
    "aws:cdk:path": "sonar/sonar-api/Deployment/Resource"
   }
  },
  "sonarapiDeploymentStageprod8B84EB55": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "DeploymentId": {
     "Ref": "sonarapiDeploymentD18A0C35cf6c356e8ea198e5381031024d698390"
    },
    "RestApiId": {
     "Ref": "sonarapiED3C6F87"
    },
    "StageName": "prod"
   },
   "DependsOn": [
    "sonarapiAccountA2F73F1F"
   ],
   "Metadata": {
    "aws:cdk:path": "sonar/sonar-api/DeploymentStage.prod/Resource"
   }
  },
  "sonarapiOPTIONS4516706C": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Token,Content-Type'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'GET,POST,PUT,DELETE,OPTIONS'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'",
        "method.response.header.Access-Control-Max-Age": "'-1'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true,
       "method.response.header.Access-Control-Max-Age": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Fn::GetAtt": [
      "sonarapiED3C6F87",
      "RootResourceId"
     ]
    },
    "RestApiId": {
     "Ref": "sonarapiED3C6F87"
    }
   },
   "Metadata": {
    "aws:cdk:path": "sonar/sonar-api/Default/OPTIONS/Resource"
   }
  },
  "sonarapiproxy9C794ECC": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "sonarapiED3C6F87",
      "RootResourceId"
     ]
    },
    "PathPart": "{proxy+}",
    "RestApiId": {
     "Ref": "sonarapiED3C6F87"
    }
   },
   "Metadata": {
    "aws:cdk:path": "sonar/sonar-api/Default/{proxy+}/Resource"
   }
  },
  "sonarapiproxyOPTIONS4382E2CD": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'Token,Content-Type'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'GET,POST,PUT,DELETE,OPTIONS'",
        "method.response.header.Access-Control-Allow-Credentials": "'true'",
        "method.response.header.Access-Control-Max-Age": "'-1'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true,
       "method.response.header.Access-Control-Allow-Credentials": true,
       "method.response.header.Access-Control-Max-Age": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "sonarapiproxy9C794ECC"
    },
    "RestApiId": {
     "Ref": "sonarapiED3C6F87"
    }
   },
   "Metadata": {
    "aws:cdk:path": "sonar/sonar-api/Default/{proxy+}/OPTIONS/Resource"
   }
  },
  "sonarapiproxyANYApiPermissionsonarsonarapiD9505687ANYproxyBB101AE2": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "sonarapifunction41404712",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:388646735826:",
       {
        "Ref": "sonarapiED3C6F87"
       },
       "/",
       {
        "Ref": "sonarapiDeploymentStageprod8B84EB55"
       },
       "/*/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "sonar/sonar-api/Default/{proxy+}/ANY/ApiPermission.sonarsonarapiD9505687.ANY..{proxy+}"
   }
  },
  "sonarapiproxyANYApiPermissionTestsonarsonarapiD9505687ANYproxy4F9100BE": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "sonarapifunction41404712",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:388646735826:",
       {
        "Ref": "sonarapiED3C6F87"
       },
       "/test-invoke-stage/*/*"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "sonar/sonar-api/Default/{proxy+}/ANY/ApiPermission.Test.sonarsonarapiD9505687.ANY..{proxy+}"
   }
  },
  "sonarapiproxyANY8EFD2154": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "ANY",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "sonarapifunction41404712",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "sonarapiproxy9C794ECC"
    },
    "RestApiId": {
     "Ref": "sonarapiED3C6F87"
    }
   },
   "Metadata": {
    "aws:cdk:path": "sonar/sonar-api/Default/{proxy+}/ANY/Resource"
   }
  },
  "sonarapiANYApiPermissionsonarsonarapiD9505687ANY063D2683": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "sonarapifunction41404712",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:388646735826:",
       {
        "Ref": "sonarapiED3C6F87"
       },
       "/",
       {
        "Ref": "sonarapiDeploymentStageprod8B84EB55"
       },
       "/*/"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "sonar/sonar-api/Default/ANY/ApiPermission.sonarsonarapiD9505687.ANY.."
   }
  },
  "sonarapiANYApiPermissionTestsonarsonarapiD9505687ANY554B72BA": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "sonarapifunction41404712",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-east-1:388646735826:",
       {
        "Ref": "sonarapiED3C6F87"
       },
       "/test-invoke-stage/*/"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "sonar/sonar-api/Default/ANY/ApiPermission.Test.sonarsonarapiD9505687.ANY.."
   }
  },
  "sonarapiANY9AEEB971": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "ANY",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "sonarapifunction41404712",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Fn::GetAtt": [
      "sonarapiED3C6F87",
      "RootResourceId"
     ]
    },
    "RestApiId": {
     "Ref": "sonarapiED3C6F87"
    }
   },
   "Metadata": {
    "aws:cdk:path": "sonar/sonar-api/Default/ANY/Resource"
   }
  },
  "bucket43879C71": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "BucketName": "sonar.aaronmamparo.com",
    "CorsConfiguration": {
     "CorsRules": [
      {
       "AllowedHeaders": [
        "*"
       ],
       "AllowedMethods": [
        "GET"
       ],
       "AllowedOrigins": [
        "*"
       ]
      }
     ]
    },
    "PublicAccessBlockConfiguration": {
     "BlockPublicAcls": true,
     "IgnorePublicAcls": true
    },
    "Tags": [
     {
      "Key": "aws-cdk:auto-delete-objects",
      "Value": "true"
     }
    ],
    "WebsiteConfiguration": {
     "ErrorDocument": "index.html",
     "IndexDocument": "index.html"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "sonar/bucket/Resource"
   }
  },
  "bucketPolicy638F945D": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "bucket43879C71"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "s3:GetObject",
       "Effect": "Allow",
       "Principal": {
        "AWS": "*"
       },
       "Resource": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::GetAtt": [
            "bucket43879C71",
            "Arn"
           ]
          },
          "/*"
         ]
        ]
       }
      },
      {
       "Action": [
        "s3:PutBucketPolicy",
        "s3:GetBucket*",
        "s3:List*",
        "s3:DeleteObject*"
       ],
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::GetAtt": [
          "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
          "Arn"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "bucket43879C71",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "bucket43879C71",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "s3:GetObject*",
        "s3:GetBucket*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Principal": {
        "CanonicalUser": {
         "Fn::GetAtt": [
          "oai7A77E975",
          "S3CanonicalUserId"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "bucket43879C71",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "bucket43879C71",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "s3:GetObject",
       "Effect": "Allow",
       "Principal": {
        "CanonicalUser": {
         "Fn::GetAtt": [
          "oai7A77E975",
          "S3CanonicalUserId"
         ]
        }
       },
       "Resource": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::GetAtt": [
            "bucket43879C71",
            "Arn"
           ]
          },
          "/*"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "sonar/bucket/Policy/Resource"
   }
  },
  "bucketAutoDeleteObjectsCustomResource3F4990B2": {
   "Type": "Custom::S3AutoDeleteObjects",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
      "Arn"
     ]
    },
    "BucketName": {
     "Ref": "bucket43879C71"
    }
   },
   "DependsOn": [
    "bucketPolicy638F945D"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "sonar/bucket/AutoDeleteObjectsCustomResource/Default"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "sonar/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-388646735826-us-east-1",
     "S3Key": "2eb6a831b107939f63cfebf68e6316e1a40f79fc99cae0fee9b333bac8d29bc4.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      "Arn"
     ]
    },
    "Runtime": "nodejs20.x",
    "Description": {
     "Fn::Join": [
      "",
      [
       "Lambda function for auto-deleting objects in ",
       {
        "Ref": "bucket43879C71"
       },
       " S3 bucket."
      ]
     ]
    }
   },
   "DependsOn": [
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092"
   ],
   "Metadata": {
    "aws:cdk:path": "sonar/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler",
    "aws:asset:path": "asset.2eb6a831b107939f63cfebf68e6316e1a40f79fc99cae0fee9b333bac8d29bc4",
    "aws:asset:property": "Code"
   }
  },
  "oai7A77E975": {
   "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
   "Properties": {
    "CloudFrontOriginAccessIdentityConfig": {
     "Comment": "Allows CloudFront to reach the bucket"
    }
   },
   "Metadata": {
    "aws:cdk:path": "sonar/oai/Resource"
   }
  },
  "sonardistributionCFDistribution8200C448": {
   "Type": "AWS::CloudFront::Distribution",
   "Properties": {
    "DistributionConfig": {
     "Aliases": [
      "sonar.aaronmamparo.com"
     ],
     "CustomErrorResponses": [
      {
       "ErrorCode": 404,
       "ResponseCode": 200,
       "ResponsePagePath": "/index.html"
      }
     ],
     "DefaultCacheBehavior": {
      "AllowedMethods": [
       "GET",
       "HEAD"
      ],
      "CachedMethods": [
       "GET",
       "HEAD"
      ],
      "Compress": true,
      "DefaultTTL": 31536000,
      "ForwardedValues": {
       "Cookies": {
        "Forward": "none"
       },
       "QueryString": false
      },
      "MaxTTL": 31536000,
      "TargetOriginId": "origin1",
      "ViewerProtocolPolicy": "redirect-to-https"
     },
     "DefaultRootObject": "index.html",
     "Enabled": true,
     "HttpVersion": "http2",
     "IPV6Enabled": true,
     "Origins": [
      {
       "ConnectionAttempts": 3,
       "ConnectionTimeout": 10,
       "DomainName": {
        "Fn::GetAtt": [
         "bucket43879C71",
         "RegionalDomainName"
        ]
       },
       "Id": "origin1",
       "S3OriginConfig": {
        "OriginAccessIdentity": {
         "Fn::Join": [
          "",
          [
           "origin-access-identity/cloudfront/",
           {
            "Ref": "oai7A77E975"
           }
          ]
         ]
        }
       }
      }
     ],
     "PriceClass": "PriceClass_100",
     "ViewerCertificate": {
      "AcmCertificateArn": "arn:aws:acm:us-east-1:388646735826:certificate/d4a83e58-baff-48b1-94e8-13a214184f81",
      "SslSupportMethod": "sni-only"
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "sonar/sonar-distribution/CFDistribution"
   }
  },
  "arecordFEB8F42A": {
   "Type": "AWS::Route53::RecordSet",
   "Properties": {
    "AliasTarget": {
     "DNSName": {
      "Fn::GetAtt": [
       "sonardistributionCFDistribution8200C448",
       "DomainName"
      ]
     },
     "HostedZoneId": {
      "Fn::FindInMap": [
       "AWSCloudFrontPartitionHostedZoneIdMap",
       {
        "Ref": "AWS::Partition"
       },
       "zoneId"
      ]
     }
    },
    "HostedZoneId": "Z00782283KN9B57P6J7Z0",
    "Name": "sonar.aaronmamparo.com.",
    "Type": "A"
   },
   "Metadata": {
    "aws:cdk:path": "sonar/a-record/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/21QwU7DMAz9Fu5ZgBW4l01Ik0BU3YEjylKvmLZxFTuMquq/o6SDTWgnP/u92C9vqW/vHvTNlTnwwlbNosWdHrdibKPMgd/H1nS7yuhxTbYBv+lMDU/BWUFyarV357gA3yEzkpsUmk6PJbUQiVgnBda/G2YQ1mfL8jiJnC6hJ0YhPzwaBmV6rI3AwQx6fE4mSmDJe0wbTzC3loITtYa+paEDJ3F61m3F1MnGDEpgCt5COvIC8kFVJI+o8PQ9/EqOlxKeFGd6fAy2gXTgiOZSUIt2OI3nflK2pVDtPTnR46vHGqNbYN5U4AQlvVhFzVPUXFb80W+wWyOLx134Tfy8n5SnIHCf6TEvwZKvZvsRbUGm6e/nKmUe00BXR9FrkD6IWgUW6i59/h9VePrCCnyKMGZn+h5dPalikA9y15m+Xers6pMRFz44wQ50Odcf3BHUFm8CAAA="
   },
   "Metadata": {
    "aws:cdk:path": "sonar/CDKMetadata/Default"
   }
  }
 },
 "Outputs": {
  "sonarapiEndpointBE550229": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "sonarapiED3C6F87"
      },
      ".execute-api.us-east-1.",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "sonarapiDeploymentStageprod8B84EB55"
      },
      "/"
     ]
    ]
   }
  }
 },
 "Mappings": {
  "AWSCloudFrontPartitionHostedZoneIdMap": {
   "aws": {
    "zoneId": "Z2FDTNDATAQYW2"
   },
   "aws-cn": {
    "zoneId": "Z3RFFRIM2A3IF5"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}